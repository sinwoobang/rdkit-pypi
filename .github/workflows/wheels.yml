name: Build RDKit platform wheels

# Build on every branch push, tag push, and pull request change:
on: [push]

jobs:
  build_wheels:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # , windows-2019
        os: [ ubuntu-20.04, macos-10.15]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1
        env:
          CIBW_BUILD: cp36-* cp37-* cp38-* cp39-*
          CIBW_SKIP: "*-win32 *-manylinux_i686"

          # Linux stuff
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BEFORE_BUILD_LINUX: "bash pre_linux.sh" 
          CIBW_ARCHS_LINUX: "x86_64"
          
          # Mac stuff
          CIBW_ARCHS_MACOS: "x86_64 arm64"  # enable arm64/aarch63 builds for MacOS 
          CIBW_BEFORE_BUILD_MACOS: "bash pre_mac.sh" 
          CIBW_ENVIRONMENT: "DYLD_LIBRARY_PATH='/usr/local/lib:/usr/lib'" # remove?
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: "export DYLD_LIBRARY_PATH='/usr/local/lib:/usr/lib' && delocate-listdeps {wheel} && delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}"
          

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
